#!/bin/bash

yellow="\033[0;33m"
ungu="\033[0;35m"
Red="\033[91;1m"
Cyan="\033[96;1m"
Xark="\033[0m"
BlueCyan="\033[5;36m"
WhiteBe="\033[5;37m"
GreenBe="\033[5;32m"
YellowBe="\033[5;33m"
BlueBe="\033[5;34m"
# . Liner 
function baris_panjang() {
  echo -e "${BlueCyan} ——————————————————————————————————— ${Xark} "
}

function vip_Banner() {
clear
baris_panjang
echo -e "${ungu}                vip TUNNELING      ${Xark} "
baris_panjang
}

function Sc_Credit(){
sleep 1
baris_panjang
echo -e "${ungu}    Terimakasih Telah Menggunakan ${Xark}"
echo -e "${ungu}             Script Credit ${Xark}"
echo -e "${ungu}              vip TUNNELING ${Xark}"
baris_panjang
exit 1
}

duration=6
frames=("██10%" "█████35%" "█████████65%" "█████████████80%" "█████████████████████90%" "█████████████████████████100%")

# Menghitung jumlah frame
num_frames=${#frames[@]}

# Menghitung jumlah iterasi
num_iterations=$((duration))

# Fungsi untuk menampilkan animasi loading berwarna

Loading_Animasi() {
    for ((i = 0; i < num_iterations; i++)); do
        clear
        index=$((i % num_frames))
        color_code=$((31 + i % 7))
echo ""
echo ""
echo ""
echo -e "\e[1;${color_code}m ${frames[$index]}\e[0m"
sleep 0.5
    done
}

# Menampilkan pesan Sukses setelah animasi selesai
function Loading_Succes() {
clear
echo -e  "\033[5;32mSucces\033[0m"
sleep 1
clear
}

function Daftar_Account() {
grep -E "^### " "/etc/xray/config.json" | cut -d ' ' -f 2-3 | column -t | sort | uniq
}


function change_vmess_quota() {
    vip_Banner
    baris_panjang
    Daftar_Account
    baris_panjang
    echo ""
    read -p " Input Username        :   " user
    quota_file="/etc/vmess/${user}"

    # Validasi apakah file kuota sudah ada
    if [ -e "$quota_file" ]; then
        # Baca quota saat ini jika file sudah ada
        current_quota=$(cat "$quota_file")
        echo "Kuota saat ini untuk pengguna $user: $((current_quota / 1024 / 1024 / 1024)) GB"
    else
        # Jika file belum ada, buat file baru
        echo "0" > "$quota_file"  # Set quota awal ke 0
        echo "Membuat file quota baru untuk pengguna $user"
    fi
    echo ""
    echo ""

    baris_panjang
    echo -e "${Cyan} BEFORE QUOTA ${Xark} "
    echo -e ""  
    echo -e "${GreenBe} Quota      : $((current_quota / 1024 / 1024 / 1024)) ${Xark} "
    echo -e "${GreenBe} Username   : $user ${Xark} "
    echo -e ""
    baris_panjang
    echo ""
    read -p " Input New Quota (gb) : " new_quota

    Loading_Animasi
    Loading_Succes

    # Validasi jika masukan kosong atau tidak valid
    if [[ -z "$new_quota" || ! "$new_quota" =~ ^[0-9]+$ ]]; then
        echo "Masukan tidak valid. Kuota tidak berubah."
        return 1
    fi

    # Konversi kuota ke byte
    new_quota_bytes=$((new_quota * 1024 * 1024 * 1024))
    echo "${new_quota_bytes}" > "${quota_file}"

    vip_Banner
    baris_panjang
    echo -e "${GreenBe} Succesfully ${Xark} "
    echo ""
    echo -e "${Cyan} AFTER ${Xark} "
    echo ""
    echo -e "${yellow} New Quota   : $new_quota GB ${Xark} "
    echo -e "${yellow} Username    : $user ${Xark}"
    echo ""
    baris_panjang

    Sc_Credit

    # Ambil data user dari database
    user_data=$(grep -w "^### $user" "/etc/vmess/.vmess.db")
    if [[ -z "$user_data" ]]; then
        echo -e "${Red}Error: User tidak ditemukan di database${Xark}"
        return 1
    fi
    
    # Parse data user
    exp=$(echo $user_data | awk '{print $3}')
    uuid=$(echo $user_data | awk '{print $4}')
    iplimit=$(echo $user_data | awk '{print $6}')
    
    # Update database
    DATADB=$(cat /etc/vmess/.vmess.db | grep "^###" | grep -w "${user}" | awk '{print $2}')
    if [[ "${DATADB}" != '' ]]; then
        sed -i "/\b${user}\b/d" /etc/vmess/.vmess.db
    fi
    echo "### ${user} ${exp} ${uuid} ${new_quota_bytes} ${iplimit}" >>/etc/vmess/.vmess.db
    
    baris_panjang
    echo " ${WhiteBe} Database Update Succes ${Xark} "
    baris_panjang
}

# Panggil fungsi untuk mengganti kuota VMess
change_vmess_quota
