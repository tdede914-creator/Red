#!/bin/bash
clear
RED='\033[0;31m'
z="\033[96m"
NC='\e[0m'
gray="\e[1;30m"
Blue="\033[1;36m"
GREEN="\033[1;32m"
Y="\033[1;33m"
BGX="\033[42m"
UPDATE="https://raw.githubusercontent.com/tdede914-creator/Red/refs/heads/ABSTRAK/"
BOT="https://raw.githubusercontent.com/myridwan/src/ipuk/"
UDPCORE="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
clear

function run(){
clear
DF='\e[39m'
Bold='\e[1m'
Blink='\e[5m'
yell='\e[33m'
RED='\033[0;31m'
green='\e[32m'
PURPLE='\e[35m'
cyan='\e[36m'
LRED='\e[91m'
Lgreen='\e[92m'
Lyellow='\e[93m'
NC='\e[0m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
LIGHT='\033[0;37m'
grenbo="\e[92;1m"
blue="\033[0;34m"
Blue="\033[36m"
clear


# // System Information
domain=$(cat /etc/xray/domain)
WKT=$(curl -s ipinfo.io/timezone)
IPVPS=$(curl -s ipv4.icanhazip.com)
tram=$(free -m | awk 'NR==2 {print $2}')
swap=$(free -m | awk 'NR==4 {print $2}')
freq=$(awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo)
cores=$(awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo)
cname=$(awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo)
knr=$( uname -r )

# // Exporting IP Address
export IP=$( curl -s https://ipinfo.io/ip/ )
# // SSH
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
openvpn_service="$(systemctl show openvpn.service --no-page)"
oovpn=$(echo "${openvpn_service}" | grep 'ActiveState=' | cut -f2 -d=)
dropbear_status=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
fail2ban_service=$(/etc/init.d/fail2ban status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
cron_service=$(systemctl  status cron | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
badvpn1=$(systemctl status udp-mini-1 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
badvpn2=$(systemctl status udp-mini-2 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
badvpn3=$(systemctl status udp-mini-3 | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
Iptables=$(systemctl status netfilter-persistent | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
RClocal=$(systemctl status rc-local | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
Autorebot=$(systemctl status rc-local | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')
UdpSSH=$(systemctl status udp-custom | grep active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g')

openssh=$( systemctl status ssh | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $openssh == "running" ]]; then
    status_openssh="${GREEN} [ON] $NC${PURPLE} │$NC"
else
    status_openssh="${RED}[OFF]${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${GREEN} [ON] $NC${PURPLE} │$NC"
else
    status_ws_epro="${RED} [OFF] ${NC} "
fi

# // Trojan Proxy
ss=$( systemctl status xray | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ss == "running" ]]; then
    status_ss="${GREEN} [ON] $NC${PURPLE} │$NC"
else
    status_ss="${RED} [OFF] ${NC} "
fi

# // NGINX
nginx=$( /etc/init.d/nginx status | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $nginx == "running" ]]; then
    status_nginx="${GREEN} [ON] $NC${PURPLE} │$NC"
else
    status_nginx="${RED} [OFF] ${NC} "
fi

# STATUS SERVICE IPTABLES
if [[ $Iptables == "exited" ]]; then
    status_galo="${GREEN} [ON] $NC${PURPLE} │$NC"
else
    status_galo="${RED} [OFF] ${NC}"
fi

# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_ssh="${RED} [OFF] ${NC} "
fi

# STATUS OHP SSH
if [[ $ohr == "running" ]]; then 
   sohr="${GREEN} [ON] ${NC}${NC}"
else
   sohr="${RED} [OFF] ${NC} ${NC}"
fi

# STATUS SERVICE OPENVPN
if [[ $oovpn == "active" ]]; then
  status_openvpn="${GREEN} [ON] $NC${PURPLE} │$NC"
else
  status_openvpn="${RED} [OFF] ${NC} "
fi

# STATUS SERVICE DROPBEAR
if [[ $dropbear_status == "running" ]]; then 
   status_beruangjatuh="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_beruangjatuh="${RED} [OFF] ${NC} ${NC}"
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_haproxy="${RED} [OFF] ${NC} "
fi

# STATUS SERVICE  SQUID 
if [[ $squid_service == "running" ]]; then 
    status_squid="${GREEN} [ON] ${NC} ( No Eror )"
else
    status_squid="${RED} [OFF] ${NC} "
fi

# STATUS SERVICE  FAIL2BAN 
if [[ $fail2ban_service == "running" ]]; then 
   status_fail2ban="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_fail2ban="${RED} [OFF] ${NC} "
fi

# STATUS SERVICE  CRONS 
if [[ $cron_service == "running" ]]; then 
   status_cron="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_cron="${RED} [OFF] ${NC} "
fi

# STATUS SERVICE  BADVPN 1
if [[ $badvpn1 == "running" ]]; then 
   status_udp1="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_udp1="${RED} [OFF] ${NC} "
fi

# STATUS SERVICE  BADVPN 2
if [[ $badvpn2 == "running" ]]; then 
   status_udp2="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_udp2="${RED} [OFF] ${NC} "
fi

# STATUS SERVICE  BADVPN 3
if [[ $badvpn3 == "running" ]]; then 
   status_udp3="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_udp3="${RED} [OFF] ${NC} "
fi

if [[ $RClocal == "exited" ]]; then
    status_galoo="${GREEN} [ON] $NC${PURPLE} │$NC"
else
    status_galoo="${RED} [OFF] ${NC}"
fi

if [[ $Autorebot == "exited" ]]; then
    status_galooo="${GREEN} [ON] $NC${PURPLE} │$NC"
else
    status_galooo="${RED} [OFF] ${NC}"
fi

# STATUS SERVICE  SSH UDP 
if [[ $UdpSSH == "running" ]]; then 
   status_udp="${GREEN} [ON] $NC${PURPLE} │$NC"
else
   status_udp="${RED} [OFF] ${NC} "
fi

clear
echo -e " ${PURPLE}┌────────────────────────────────────────────┐$NC"
echo -e " ${PURPLE}│$NC Operating System$NC  $blue=$NC$yellow $(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')$NC"
echo -e " ${PURPLE}│$NC IP Server$NC         $blue=$NC$yellow $IPVPS$NC"
echo -e " ${PURPLE}│$NC Domain$NC            $blue=$NC$yellow $(cat /etc/xray/domain)$NC"
echo -e " ${PURPLE}└────────────────────────────────────────────┘$NC"
echo -e " ${PURPLE}┌────────────────────────────────────────────┐$NC"
echo -e " ${PURPLE}│$NC$NC\033[46m              Service Information           $NC${PURPLE}│$NC"
echo -e " ${PURPLE}└────────────────────────────────────────────┘$NC"
echo -e " ${PURPLE}┌────────────────────────────────────────────┐$NC"
echo -e " ${PURPLE}│ ${PURPLE}Service SSH / TUN                 $blue=$NC $status_ssh"
echo -e " ${PURPLE}│ ${PURPLE}Service SSH UDP                   $blue=$NC $status_udp"
echo -e " ${PURPLE}│ ${PURPLE}Service OpenVPN SSL               $blue=$NC $status_openvpn"
echo -e " ${PURPLE}│ ${PURPLE}Service OpenVPN WS-SSL            $blue=$NC $status_openvpn"
echo -e " ${PURPLE}│ ${PURPLE}Service OpenVPN UDP               $blue=$NC $status_openvpn"
echo -e " ${PURPLE}│ ${PURPLE}Service OpenVPN TCP               $blue=$NC $status_openvpn"
echo -e " ${PURPLE}│ ${PURPLE}Service OHP SSH                   $blue=$NC $status_openvpn"
echo -e " ${PURPLE}│ ${PURPLE}Service OHP Dropbear              $blue=$NC $status_openvpn"
echo -e " ${PURPLE}│ ${PURPLE}Service OHP OpenVPN               $blue=$NC $status_openvpn"
echo -e " ${PURPLE}│ ${PURPLE}Service WS ePRO                   $blue=$NC $status_ws_epro"
echo -e " ${PURPLE}│ ${PURPLE}Service BadVPN 7100               $blue=$NC $status_udp1"
echo -e " ${PURPLE}│ ${PURPLE}Service BadVPN 7200               $blue=$NC $status_udp2"
echo -e " ${PURPLE}│ ${PURPLE}Service BadVPN 7300               $blue=$NC $status_udp3"
echo -e " ${PURPLE}│ ${PURPLE}Service Dropbear                  $blue=$NC $status_beruangjatuh"
echo -e " ${PURPLE}│ ${PURPLE}Service Haproxy                   $blue=$NC $status_haproxy"
echo -e " ${PURPLE}│ ${PURPLE}Service Crons                     $blue=$NC $status_cron"
echo -e " ${PURPLE}│ ${PURPLE}Service Nginx Webserver           $blue=$NC $status_nginx"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Vmess WS TLS         $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Vmess WS Non TLS     $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Vmess gRPC           $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Vless WS TLS         $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Vless WS Non TLS     $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Vless gRPC           $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Trojan WS            $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Trojan Non WS        $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Trojan gRPC          $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Shadowsocks WS       $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Shadowsocks Non WS   $blue=$NC $status_ss"
echo -e " ${PURPLE}│ ${PURPLE}Service Xray Shadowsocks gRPC     $blue=$NC $status_ss"
echo -e " ${PURPLE}└────────────────────────────────────────────┘$NC"
echo ""
read -n 1 -s -r -p "Press !! [ ENTER ] back on menu"
features
}


echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC                     SETTING                  "
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC${Y}01.) ${NC}${GREEN}RUNNING SERVICE${NC}"
echo -e " ${z}│$NC${Y}02.) ${NC}${GREEN}INSTALL SLOWDNS ${NC}"
echo -e " ${z}│$NC${Y}03.) ${NC}${GREEN}MENU POINTING ${NC}"
echo -e " ${z}│$NC${Y}04.) ${NC}${GREEN}RESTART SERVICE ${NC}"
echo -e " ${z}│$NC${Y}05.) ${NC}${GREEN}CLEAR CHACE ${NC}"
echo -e " ${z}│$NC${Y}06.) ${NC}${GREEN}CHANGE DOMAIN ${NC}"
echo -e " ${z}│$NC${Y}07.) ${NC}${GREEN}FIX POINTING DOMAIN${NC}"
echo -e " ${z}│$NC${Y}08.) ${NC}${GREEN}FIX HARP${NC}"
echo -e " ${z}│$NC${Y}09.) ${NC}${GREEN}LIMIT SPEED ${NC}"
echo -e " ${z}│$NC${Y}10.) ${NC}${GREEN}LIMIT IP XRAY ${NC}"
echo -e " ${z}│$NC${Y}11.) ${NC}${GREEN}LIMIT IP SSH ${NC}"
echo -e " ${z}│$NC${Y}12.) ${NC}${GREEN}MONITOR ${NC}"
echo -e " ${z}│$NC${Y}13.) ${NC}${GREEN}INSTALL DNS MEDIA${NC}"
echo -e " ${z}│$NC${Y}14.) ${NC}${GREEN}INSTALL WARP${NC}"
echo -e " ${z}│$NC${Y}15.) ${NC}${GREEN}INSTALL PANEL ${NC}"
echo -e " ${z}│$NC${Y}16.) ${NC}${GREEN}SPEEDTEST ${NC}"
echo -e " ${z}│$NC${Y}17.) ${NC}${GREEN}AUTO REBOOT ${NC}"
echo -e " ${z}│$NC${Y}18.) ${NC}${GREEN}INFO PORT ${NC}"
echo -e " ${z}│$NC${Y}19.) ${NC}${GREEN}INSTALL NOOBZ ${NC}"
echo -e " ${z}│$NC${Y}20.) ${NC}${GREEN}UNINSTALL NOOBZ ${NC}"
echo -e " ${z}│$NC${Y}21.) ${NC}${GREEN}CEK BANDWITH ${NC}"
echo -e " ${z}│$NC${Y}22.) ${NC}${GREEN}AUTO DEL ALL AKUN EXPIRED ${NC}"
echo -e " ${z}│$NC${Y}23.) ${NC}${GREEN}REGIST VPS ${NC}"
echo -e " ${z}│$NC${Y}24.) ${NC}${GREEN}CLEAR LOG ${NC}"
echo -e " ${z}│$NC${Y}25.) ${NC}${GREEN}CHANGE BANNER ${NC}"
echo -e " ${z}│$NC${Y}26.) ${NC}${GREEN}FIX DROPBEAR ${NC}"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${z}│$NC${Y} (X.)${NC}${GREEN} Back To Menu${NC}"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
read -p "  Select options >>>  " menu
case $menu in
1) clear ;
    run
    ;;
2) clear ;
    rm -rf install; apt update; wget https://github.com/khaledagn/SlowDNS/raw/main/install; chmod 777 install; ./install --start
    ;;
3) clear ;
    menu_cf.sh
    ;;    
4) clear ;    
    reset
    ;;
5) clear ;   
    clearcache
    ;;
6) clear ; 
    addhost
    ;;
7) clear ;
   fixcert
   ;;
8) clear ;
   fixhap
   ;;
9) clear ;
   limitspeed
   ;;
10) clear ;
   onoff
   ;;
11) clear ;
   on-offssh
   ;;
12) clear ;
   gotop
   ;;
13) clear ;
   media
   ;;
14) clear ;
   bash warp.sh wg6
   ;;
15) clear ;
   m-panel
   ;;
16) clear ;
   speedtest
   ;;      
17) clear ;
   autoreboot
   ;;  
18) clear ;
   prot
   ;;
19) clear ;
   git clone https://github.com/noobz-id/noobzvpns.git && cd noobzvpns/ && ./install.sh
   ;;
20) clear ;
   git clone https://github.com/noobz-id/noobzvpns.git && cd noobzvpns/ && ./uninstall.sh
   ;;
21) clear ;
   bw
   ;;
22) clear ;
   auto-delet.sh
   ;;
23) clear ;
   add-ip
   ;;
24) clear ;
   clearlog
   ;;
25) clear ;
   nano /etc/banner.txt
   ;;
26) clear ;
   wget https://raw.githubusercontent.com/tdede914-creator/Red/refs/heads/ABSTRAK/fix.sh && chmod +x fix.sh && ./fix.sh
   ;;
*) clear ;
    menu
    ;;
esac
