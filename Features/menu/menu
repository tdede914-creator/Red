#!/bin/bash
# COLOR VALIDATION
clear
AQUOS="\033[92;1m"
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2" 
ISP=$(cat /etc/xray/isp) 
CITY=$(cat /etc/xray/city) 
IPVPS=$(curl -s ipv4.icanhazip.com) 
domain=$(cat /etc/xray/domain) 
RAM=$(free -m | awk 'NR==2 {print $2}') 
USAGERAM=$(free -m | awk 'NR==2 {print $3}') 
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')") 
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')") 
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g') 
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)") 
TIMEZONE=$(printf '%(%H:%M:%S)T') 
# if [ -z "$(cat /etc/.password.txt)" ]; then
#     passwd="unknown"
# else
#     passwd=$(cat /etc/.password.txt)
# fi > /dev/null
SERONLINE=$(uptime -p | cut -d " " -f 2-10000) 
#NS=$(cat /root/nsdomain)
#PUB=$(cat /etc/slowdns/server.pub)
Repo="https://raw.githubusercontent.com/bowowiwendi/WendyVpn/ABSTRAK/"
regist="https://raw.githubusercontent.com/bowowiwendi/ipvps/main/main/ip"
MYIP=$(curl -sS ipv4.icanhazip.com) 
echo ""
#####################################
function vpsoff(){
TIME="10"
CHATID="5162695441"
KEY="6778508111:AAGmlVVILOA0z4kgLHoA1gD7Hf-maAi9vCQ"
URL="https://api.telegram.org/bot$KEY/sendMessage"
TEXT="<code>──────────────────────────────────</code>
<b>⚠️ YOUR SC VPS EXPIRED ⚠️</b>
<code>──────────────────────────────────</code>
USER        : $username
VPS IP      : $MYIP
DOMAIN      : $domain
DATE        : $DATE
PASSWORD    : $passwd
<code>──────────────────────────────────</code>
"
curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}
######################################
# // USERNAME IZIN IP
username=$(curl -sS ${regist} | grep $MYIP | awk '{print $2}')
if [ -z "$username" ]; then
    username=$(cat /usr/bin/user) # Jika variabel kosong, isi dengan "anonim"
fi
echo "$username" >/usr/bin/user
rm -f /usr/bin/e
valid=$(curl -sS ${regist} | grep $MYIP | awk '{print $3}')
echo "$valid" > /usr/bin/e
######################################
# // DETAIL ORDER IZIN IP
username=$(cat /usr/bin/user)
# oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
######################################

# // DAYS LEFT
DATE=$(date +'%Y-%m-%d')
if [ "$valid" != "lifetime" ]; then
    d1=$(date -d "$valid" +%s)
    d2=$(date -d "$DATE" +%s)
    certifacate=$(((d1 - d2) / 86400))
else
    certifacate="Unlimited"
fi
######################################
# // VPS INFORMATION
# datediff() {
#     d1=$(date -d "$1" +%s)
#     d2=$(date -d "$2" +%s)
#     echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
# }
# mai="datediff "$Exp" "$DATE""

function upp(){
clear
cd /usr/local/
rm -rf sbin
rm -rf /usr/bin/enc
mkdir /usr/local/sbin
dateFromServer=$(curl -v --insecure --silent https://google.com/ 2>&1 | grep Date | sed -e 's/< Date: //')
biji=`date +"%Y-%m-%d" -d "$dateFromServer"`
red() { echo -e "\\033[32;1m${*}\\033[0m"; }
clear
fun_bar() {
    CMD[0]="$1"
    CMD[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${CMD[0]} -y >/dev/null 2>&1
        ${CMD[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "  \033[0;33mPlease Wait Loading \033[1;37m- \033[0;33m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[0;32m🚥"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[0;33m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "  \033[0;33mPlease Wait Loading \033[1;37m- \033[0;33m["
    done
    echo -e "\033[0;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}
res1() {
    wget ${Repo}Features/menu.zip
    wget -q -O /usr/bin/enc "${Repo}enc/encrypt" ; chmod +x /usr/bin/enc
    7z e -paskykenza123 menu.zip
    unzip menu.zip
    chmod +x menu/*
    enc menu/*
    mv menu/* /usr/local/sbin
    rm -rf menu
    rm -rf menu.zip
    rm -rf update.sh
}
netfilter-persistent
clear
echo -e "\033[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "${NS}          UPDATE SCRIPT                ${NS}"
echo -e "\033[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e ""
echo -e "\033[1;91m update script service\033[1;37m"
fun_bar 'res1'
echo -e "\033[1;36m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e ""
echo -e "\033[92mAnda akan du arahkan ke menu dalam 3 dtk..\033[0m"
sleep 3
menu
} 

######################################
# // AKTIVATED & EXPIRED
Info="\033[92mACTIVED\033[0m"
Eror="\033[91mEXPIRED\033[0m"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl -sS ${regist} | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Eror}"
vpsoff
fi
######################################
ping_result=$(ping -c 1 google.com | grep 'time=' | awk -F'time=' '{print $2}' | awk '{print $1}')
# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"
# Getting CPU Information | Wings Project
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
ISP=$(curl -s ipinfo.io/org | cut -d " " -f 2-10 )
#CITY=$(curl -s ipinfo.io/city )
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status | Geo Project

# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${grenbo}ON✓${NC}"
else
   status_ssh="${RED}🔴${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${grenbo}ON✓${NC}"
else
    status_ws_epro="${RED}🔴${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${grenbo}ON✓${NC}"
else
   status_haproxy="${RED}🔴${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then 
   status_xray="${grenbo}ON✓${NC}"
else
   status_xray="${RED}🔴${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then 
   status_nginx="${grenbo}ON✓${NC}"
else
   status_nginx="${RED}🔴${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="${grenbo}ON✓${NC}"
else
   status_dropbear="${RED}🔴${NC} "
fi
#BW
#Download/Upload today
dtoday="$(vnstat -i eth0 | grep "today" | awk '{print $2" "substr ($3, 1, 1)}')"
utoday="$(vnstat -i eth0 | grep "today" | awk '{print $5" "substr ($6, 1, 1)}')"
ttoday="$(vnstat -i eth0 | grep "today" | awk '{print $8" "substr ($9, 1, 1)}')"
#Download/Upload yesterday
dyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $2" "substr ($3, 1, 1)}')"
uyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $5" "substr ($6, 1, 1)}')"
tyest="$(vnstat -i eth0 | grep "yesterday" | awk '{print $8" "substr ($9, 1, 1)}')"
#Download/Upload current month
dmon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $3" "substr ($4, 1, 1)}')"
umon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $6" "substr ($7, 1, 1)}')"
tmon="$(vnstat -i eth0 -m | grep "`date +"%b '%y"`" | awk '{print $9" "substr ($10, 1, 1)}')"
#####INFOAKUN
# \\ Vless account //
vlx=$(cat /etc/xray/config.json | grep "#&" | wc -l)
let vla=$vlx/2
# \\ Vmess account //
vmc=$(cat /etc/xray/config.json | grep "###" | wc -l)
let vma=$vmc/2
# \\ Trojan account //
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(cat /etc/xray/config.json | grep "#!" | wc -l)
let trb=$trx/2
# \\ shadowsocks account //
ssx=$(cat /etc/xray/config.json | grep "#!!" | wc -l)
let ssa=$ssx/2
###########
KANAN="\033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m$NC"
KIRI="\033[1;32m>\033[1;33m>\033[1;31m>\033[1;31m$NC"
########
r="\033[1;31m"  #REDTERANG
a=" ${grenbo}ACCOUNT PREMIUM" 
echo -e " "
figlet  "Hamid Tunnel" | lolcat
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│${AQUOS}       ${KIRI}Welcome To Script Premium t.me/HamidTunneling${KANAN}      $NC${z}│$NC"  ## 
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z System OS ${NC}     $z   =   $grenbo $MODEL${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z Server RAM ${NC}    $z   =   $grenbo $uram/$RAM MB ${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z CPU Core ${NC}      $z   =   $grenbo $CORE ${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z CPU Usage ${NC}     $z   =   $grenbo $cpu_usage ${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z CITY ${NC}          $z   =   $grenbo $CITY ${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z Time ${NC}          $z   =   $grenbo $TIMEZONE${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z IP VPS ${NC}        $z   =   $grenbo $IPVPS${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z Domain ${NC}        $z   =   $grenbo $domain${NC}"
echo -e " ${z}│$NC$r ⇲ $NC$z Latency Server$NC    $z=   $grenbo $ping_result ms"
echo -e " ${z}│$NC$r ⇲ $NC$z Version$NC           $z=   $grenbo V3.2"
echo -e " ${z}│$NC$r ⇲ $NC$z User$NC              $z=   $grenbo $username"
echo -e " ${z}│$NC$r ⇲ $NC$z Script Status$NC     $z=   $grenbo $sts "
echo -e " ${z}│$NC$r ⇲ $NC$z Expiry script$NC     $z=   $grenbo $exp$NC ($r $certifacate ${NC}Days )"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e " ${z}│ ${NC}$z     SSH$NC : $status_ssh" "       $z NGINX$NC : $status_nginx" "        $z XRAY$NC : $status_xray   $NC${z}│$NC" 
echo -e " ${z}│ ${NC}$z WS-ePRO$NC : $status_ws_epro" "    $z DROPBEAR$NC : $status_dropbear" "     $z HAPROXY$NC : $status_haproxy   $NC${z}│$NC"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e "      ${AQUOS}YESTERDAY: ${tyest} NOW: ${ttoday} MONTH: ${tmon}${NC}" #
echo -e "       ───────────────────────────────────────────────${NC}"  #lolcat 
echo -e "           ${z}SSH/OPENVPN${NC}    $y➡️$NC $ssh1${NC}" "$a"
echo -e "           ${z}VMESS/WS/GRPC${NC}  $y➡️$NC $vmc${NC}" "$a"
echo -e "           ${z}VLESS/WS/GRPC${NC}  $y➡️$NC $vlx${NC}" "$a"
echo -e "           ${z}TROJAN/WS/GRPC${NC} $y➡️$NC $trx${NC}" "$a"
echo -e "           ${z}SHADOW/WS/GRPC${NC} $y➡️$NC $ssx${NC}" "$a"
echo -e " ${z}╭══════════════════════════════════════════════════════════╮${NC}"
echo -e " ${z}│$NC [${r}01${NC}]$grenbo SSH MENU$NC     ${z}│$NC [${r}06${NC}]$grenbo TRIAL MENU$NC  ${z} │$NC [${r}11${NC}]$grenbo BCKP/RSTR   $NC${z}│$NC"
echo -e " ${z}│$NC [${r}02${NC}]$grenbo VMESS MENU$NC   ${z}│$NC [${r}07${NC}]$grenbo AUTOREBOOT$NC  ${z} │$NC [${r}12${NC}]$grenbo BOT PANEL   $NC${z}│$NC"    
echo -e " ${z}│$NC [${r}03${NC}]$grenbo VLESS MENU$NC   ${z}│$NC [${r}08${NC}]$grenbo INS. UDP    $NC${z} │$NC [${r}13${NC}]$grenbo SLOWDNS    $NC ${z}│$NC"   
echo -e " ${z}│$NC [${r}04${NC}]$grenbo TROJAN MENU$NC  ${z}│$NC [${r}09${NC}]$grenbo UPDATE SC    $NC${z}│$NS [${r}14${NC}]$grenbo SETTING     $NC${z}│$NC"
echo -e " ${z}│$NC [${r}05${NC}]$grenbo SHADOW MENU$NC  ${z}│$NC [${r}10${NC}]$grenbo NOOBZ MENU$NC  ${z} │$NC [${r}15${NC}]$grenbo EXIT        $NC${z}│$NC"
echo -e " ${z}╰══════════════════════════════════════════════════════════╯${NC}"
echo -e "       ───────────────────────────────────────────────${NC}"  # 
echo
read -p " Select options/Pilih opsi (1-15): " opt
echo -e ""
case $opt in
1 | 01)
clear
m-sshws
;;
2 | 02)
clear
m-vmess
;;
3 | 03)
clear
m-vless
;;
4 | 04)
clear
m-trojan
;;
5 | 05)
clear
m-ssws
;;
6 | 06)
clear
m-trial
;;
7 | 07)
clear
jam.sh
;;
8 | 08)
clear
UDEPE
;;
9)
clear
upp
;;
10)
clear
noobz
;;
11)
clear
menu-bckp
;;
12)
clear
m-bot
;;
13)
clear
sd
;;
14)
clear
features
;;
15 | 0)
figlet WendiVpn PROJECT
exit
;;
x)
clear
menu
;;
*)
echo -e ""
menu
;;
esac
