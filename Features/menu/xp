#!/bin/bash
now=$(date +"%Y-%m-%d")
MYIP=$(wget -qO- ipinfo.io/ip)
clear

declare -A locked_accounts=(
    [vmess]=""
    [vless]=""
    [trojan]=""
    [shadowsocks]=""
    [ssh]=""
)

function format_html_message() {
    local protocol=$1
    local accounts=($2)
    
    [[ ${#accounts[@]} -eq 0 ]] && return

    local message="
<html>
<body>
<pre style=\"font-family: monospace;\">
──────────────────────────
<b>⚠️ NOTIF EXP ${protocol^^} LOCKED ⚠️</b>
──────────────────────────
<b>🔒 Total locked: ${#accounts[@]}</b>
<b>📅 Date: $now</b>
──────────────────────────
"
    for account in "${accounts[@]}"; do
        message+="🔐 $(printf "%-25s" "$account")\n"
    done
    
    message+="──────────────────────────
</pre>
</body>
</html>"
    
    echo "$message"
}

function send_telegram_notification() {
    local protocol=$1
    local accounts=($2)
    
    [[ ${#accounts[@]} -eq 0 ]] && return

    local CHATID=$(awk '/^#bot# / {print $3}' /etc/bot/.bot.db)
    local KEY=$(awk '/^#bot# / {print $2}' /etc/bot/.bot.db)
    local URL="https://api.telegram.org/bot$KEY/sendMessage"
    
    local html_message=$(format_html_message "$protocol" "${accounts[*]}")
    
    curl -sS --max-time 10 \
        -X POST "$URL" \
        -d chat_id="$CHATID" \
        -d text="$html_message" \
        -d parse_mode="html" \
        -d disable_web_page_preview="true" >/dev/null
}

##----- Auto Remove Vmess
data=($(cat /etc/xray/config.json | grep '^###' | cut -d ' ' -f 2 | sort | uniq))
for user in "${data[@]}"; do
    exp=$(grep -w "^### $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
    d1=$(date -d "$exp" +%s)
    d2=$(date -d "$now" +%s)
    exp2=$(((d1 - d2) / 86400))
    if [[ "$exp2" -le "0" ]]; then
        sed -i "/^### $user/,/^},{/d" /etc/xray/config.json
        sed -i "/^## $user/,/^},{/d" /etc/xray/config.json
        sed -i "/^### $user $exp/d" /etc/vmess/.vmess.db
        rm -rf /etc/vmess/$user
        rm -f /etc/kyt/limit/vmess/ip/$user
        rm -f /etc/limit/vmess/$user
        rm -f /var/www/html/vmess-$user.txt
        echo "[VMESS] 🗑️ $user expired on $exp"
        expired_accounts[vmess]+=("$user")
    fi
done

#----- Auto Remove Vless
data=($(cat /etc/xray/config.json | grep '^#&' | cut -d ' ' -f 2 | sort | uniq))
for user in "${data[@]}"; do
    exp=$(grep -w "^#& $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
    d1=$(date -d "$exp" +%s)
    d2=$(date -d "$now" +%s)
    exp2=$(((d1 - d2) / 86400))
    if [[ "$exp2" -le "0" ]]; then
        sed -i "/^#& $user/,/^},{/d" /etc/xray/config.json
        sed -i "/^#&& $user/,/^},{/d" /etc/xray/config.json
        sed -i "/^### $user $exp/d" /etc/vless/.vless.db
        rm -rf /etc/vless/$user
        rm -f /etc/kyt/limit/vless/ip/$user
        rm -f /etc/limit/vless/$user
        rm -f /var/www/html/vless-$user.txt
        echo "[VLESS] 🗑️ $user expired on $exp"
        expired_accounts[vless]+=("$user")
    fi
done

#----- Auto Remove Trojan
data=($(cat /etc/xray/config.json | grep '^#!' | cut -d ' ' -f 2 | sort | uniq))
for user in "${data[@]}"; do
    exp=$(grep -w "^#! $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
    d1=$(date -d "$exp" +%s)
    d2=$(date -d "$now" +%s)
    exp2=$(((d1 - d2) / 86400))
    if [[ "$exp2" -le "0" ]]; then
        sed -i "/^#! $user/,/^},{/d" /etc/xray/config.json
        sed -i "/^#!# $user/,/^},{/d" /etc/xray/config.json
        sed -i "/^### $user $exp/d" /etc/trojan/.trojan.db
        rm -rf /etc/trojan/$user
        rm -f /etc/kyt/trojan/ip/$user
        rm -f /etc/limit/trojan/$user
        rm -f /var/www/html/trojan-$user.txt
        echo "[TROJAN] 🗑️ $user expired on $exp"
        expired_accounts[trojan]+=("$user")
    fi
done

#----- Auto Remove Shadowsocks
data=($(cat /etc/xray/config.json | grep '^#!!' | cut -d ' ' -f 2 | sort | uniq))
for user in "${data[@]}"; do
    exp=$(grep -w "^#!! $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
    d1=$(date -d "$exp" +%s)
    d2=$(date -d "$now" +%s)
    exp2=$(((d1 - d2) / 86400))
    if [[ "$exp2" -le "0" ]]; then
        sed -i "/^#!! $user/,/^},{/d" /etc/xray/config.json
        sed -i "/^#&! $user/,/^},{/d" /etc/xray/config.json
        sed -i "/^### $user $exp/d" /etc/shadowsocks/.shadowsocks.db
        rm -rf /etc/shadowsocks/$user
        rm -f /etc/kyt/shadowsocks/ip/$user
        rm -f /etc/limit/shadowsocks/$user
        rm -f /var/www/html/sodosokws-$user.txt
        echo "[SHADOWSOCKS] 🗑️ $user expired on $exp"
        expired_accounts[shadowsocks]+=("$user")
    fi
done

#----- Auto Remove SSH (with root protection)
hariini=$(date +%d-%m-%Y)
while IFS=: read -r username exp; do
    # Skip root account and system accounts
    [[ "$username" == "root" ]] && { echo "[SSH] ⚠️ Skipping root account"; continue; }
    [[ -z "$exp" ]] && continue  # Skip accounts without expiration
    
    # Calculate expiration
    expire_seconds=$((exp * 86400))
    current_seconds=$(date +%s)
    
    if (( expire_seconds <= current_seconds )); then
        # Verify account exists before deletion
        if id "$username" &>/dev/null; then
            # Remove account and related files
            userdel --force "$username" 2>/dev/null
            sed -i "/^### $username/d" /etc/ssh/.ssh.db 2>/dev/null
            rm -f /etc/ssh/"$username" 2>/dev/null
            rm -f /etc/kyt/limit/ssh/ip/"$username" 2>/dev/null
            rm -f /var/www/html/ssh-"$username".txt 2>/dev/null
            
            # Format expiration date
            exp_date=$(date -d "@$expire_seconds" "+%d-%m-%Y")
            echo "[SSH] 🗑️ Removed $username (expired: $exp_date)"
            expired_accounts[ssh]+=("$username")
        else
            echo "[SSH] ⚠️ Account $username not found (skipped)"
        fi
    fi
done < <(awk -F: '$1 != "root" && $8 ~ /^[0-9]+$/ {print $1":"$8}' /etc/shadow)

# Cleanup temporary file
rm -f /tmp/expirelist.txt 2>/dev/null

systemctl restart xray
systemctl reload sshd